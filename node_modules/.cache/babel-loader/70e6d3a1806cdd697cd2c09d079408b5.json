{"ast":null,"code":"var _jsxFileName = \"/home/gwl/Workspace/SquareGuessGame/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport Header from './components/header/Header';\nimport Card from './components/card/Card';\nimport GameOver from './components/card/GameOver';\nimport './styles/main.css';\n\nclass App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFlipped: Array(4).fill(false),\n      cardArray: App.cardArray().sort(),\n      correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n      correctChoice: false,\n      choiceArray: Array(24).fill(false),\n      arrayCount: 0\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      const cardId = parseInt(event.target.id);\n      const newFlipps = this.state.isFlipped.slice();\n      const choiceArray = this.state.choiceArray.slice();\n      const arrayCount = this.state.arrayCount;\n\n      if (newFlipps[cardId] === false) {\n        newFlipps[cardId] = !newFlipps[cardId];\n        this.setState({\n          isFlipped: newFlipps\n        });\n        setTimeout(() => {\n          this.next();\n        }, 1000);\n      }\n\n      ;\n\n      if (cardId === this.state.correctCard) {\n        if (choiceArray[arrayCount] === false) {\n          choiceArray[arrayCount] = !choiceArray[arrayCount];\n          this.setState({\n            correctChoice: true,\n            choiceArray: choiceArray\n          });\n        }\n\n        ;\n      }\n\n      console.log(this.state);\n    };\n\n    this.restartGame = () => {\n      this.setState({\n        isFlipped: Array(4).fill(false),\n        cardArray: App.cardArray().sort(),\n        correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n        correctChoice: false,\n        choiceArray: Array(24).fill(false),\n        arrayCount: 0\n      });\n    };\n\n    this.skip = () => {\n      this.setState({\n        isFlipped: Array(4).fill(false),\n        cardArray: App.cardArray().sort(),\n        correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n        correctChoice: false\n      });\n    };\n\n    this.next = () => {\n      const arrayCount = this.state.arrayCount;\n      this.setState({\n        isFlipped: Array(4).fill(false),\n        cardArray: App.cardArray().sort(),\n        correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n        correctChoice: false,\n        arrayCount: arrayCount + 1\n      });\n    };\n\n    this.isGameOver = () => {\n      return this.state.arrayCount === 1;\n    };\n\n    this.correctChoice = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      restartGame: this.restartGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    }), this.isGameOver() ? /*#__PURE__*/React.createElement(GameOver, {\n      restartGame: this.restartGame,\n      choiceArray: correctCountNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }\n    }, this.state.cardArray.map((correctCard, index) => /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      id: index,\n      correctCard: this.state.correctCard,\n      isFlipped: this.state.isFlipped[index],\n      handleClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.skip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Skip\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, this.state.arrayCount + 1, \" of 24\")));\n  }\n\n}\n\nApp.cardArray = () => {\n  return [1, 2].reduce((preValue, current, index) => {\n    return preValue.concat([current, current]);\n  }, []);\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gwl/Workspace/SquareGuessGame/src/App.js"],"names":["React","PureComponent","Header","Card","GameOver","App","state","isFlipped","Array","fill","cardArray","sort","correctCard","Math","floor","random","correctChoice","choiceArray","arrayCount","handleClick","event","preventDefault","cardId","parseInt","target","id","newFlipps","slice","setState","setTimeout","next","console","log","restartGame","skip","isGameOver","render","correctCountNumber","map","index","reduce","preValue","current","concat"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport Header from './components/header/Header';\nimport Card from './components/card/Card';\nimport GameOver from './components/card/GameOver';\nimport './styles/main.css';\n\nclass App extends PureComponent {\n\n  state = { \n    isFlipped: Array(4).fill(false),\n    cardArray: App.cardArray().sort(),\n    correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n    correctChoice: false,\n    choiceArray: Array(24).fill(false),\n    arrayCount: 0\n  };\n\n  static cardArray = () => {\n    return [1,2].reduce((preValue, current, index) => {\n      return preValue.concat([current, current])\n    },[]);\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    const cardId = parseInt(event.target.id); \n    const newFlipps = this.state.isFlipped.slice();\n    const choiceArray = this.state.choiceArray.slice();\n    const arrayCount = this.state.arrayCount;\n    if (newFlipps[cardId] === false) {\n      newFlipps[cardId] = !newFlipps[cardId];\n      this.setState({ \n        isFlipped: newFlipps,\n      })\n      setTimeout(() => {\n      this.next()\n      }, 1000)\n    };\n\n    if (cardId === this.state.correctCard) {\n      if (choiceArray[arrayCount] === false) {\n        choiceArray[arrayCount] = !choiceArray[arrayCount];\n        this.setState({ \n          correctChoice: true,\n          choiceArray: choiceArray\n        })};\n\n    }\n    console.log(this.state)\n\n  };\n\n  restartGame = () => {\n    this.setState({\n      isFlipped: Array(4).fill(false),\n    cardArray: App.cardArray().sort(),\n    correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n    correctChoice: false,\n    choiceArray: Array(24).fill(false),\n    arrayCount: 0\n    });\n  };\n\n  skip = () => {\n    this.setState({\n      isFlipped: Array(4).fill(false),\n    cardArray: App.cardArray().sort(),\n    correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n    correctChoice: false\n    })\n  }\n\n  next = () => {\n    const arrayCount = this.state.arrayCount;\n    this.setState({\n      isFlipped: Array(4).fill(false),\n    cardArray: App.cardArray().sort(),\n    correctCard: Math.floor(Math.random() * (3 - 0) + 0),\n    correctChoice: false,\n    arrayCount: arrayCount + 1\n    })\n  }\n\n  isGameOver = () => {\n    return this.state.arrayCount === 1};\n\n  correctChoice = () => {\n    \n  }  \n\n  render() {\n    return (\n     <div>\n       <Header restartGame={this.restartGame} />\n       { this.isGameOver() ? \n              <GameOver \n                restartGame={this.restartGame} \n                choiceArray={correctCountNumber}\n              /> :\n       <div className=\"grid-container\">\n          {\n            this.state.cardArray.map((correctCard, index) => \n              <Card\n                key={index} \n                id={index} \n                correctCard={this.state.correctCard} \n                isFlipped={this.state.isFlipped[index]} \n                handleClick={this.handleClick}     \n              />\n            )\n          }\n          <div className=\"skip\">\n            <button onClick={this.skip}>\n            Skip\n            </button>\n          </div>\n          <div>\n            {this.state.arrayCount + 1} of 24\n          </div>\n        </div>\n       }\n     </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}